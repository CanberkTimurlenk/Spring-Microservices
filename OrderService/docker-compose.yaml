version: "3.8"
services:
  orderservice-api:
    build: .
    image: orderservice/ecommerce-microservices:latest
    container_name: OrderService
    restart: always
    ports:
      - 8085:8080
    networks:
      - ecommerce-microservices-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://orderservice-postgres:5432/OrderService
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Ab123456
      EUREKA_CLIENT_SERVICE_URL: http://eureka-server:9999/eureka/
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      orderservice-postgres:
        condition: service_healthy
    volumes:
      - .m2:/root/.m2

  orderservice-postgres:
    image: "postgres:latest"
    restart: always
    container_name: OrderService-Postgres
    ports:
      - 5430:5432
    environment:
      POSTGRES_DB: OrderService
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Ab123456
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 10s
        timeout: 3s
        retries: 5
    networks:
      - ecommerce-microservices-net

networks:
  ecommerce-microservices-net:
    external: true



 